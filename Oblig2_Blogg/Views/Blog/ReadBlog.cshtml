@model Oblig2_Blogg.Models.ViewModels.BlogViewModel

@{
    ViewData["Title"] = "ReadBlog";
}

<h1>@Model.Name</h1>
<hr />
<p>
    Created: @Model.Created,
    @if (@Model.Owner == null)
    {<a>No user</a> }
    else
    {@Model.Owner.UserName}
</p>

<hr />

<h4> @Model.Description</h4>

@if (@Model.Closed == false)
{
    <p>@Html.ActionLink("Create new post", "CreatePost", new { blogId = @Model.BlogId, id = @Model.BlogId })</p>
}

<hr />
<p>Posts:....</p>
<hr />

<table class="table table-hover">
    <tr>
        <th>User</th>
        <th>Post </th>
        <th>Created</th>
        <th>Modified </th>
        <th>Options</th>
    </tr>
    @try
    {
        @foreach (var item in Model.Posts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Owner.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Modified)
                </td>
                <td>
                    @Html.ActionLink("Read post", "ReadPost", new { id = item.PostId }) |

                    @Html.ActionLink("Edit", "EditPost", new { id = item.PostId }) |

                    @Html.ActionLink("Delete", "DeletePost", new { id = item.PostId })
                </td>
            </tr>
        }
    }
    catch (NullReferenceException e)
    {
        //do nothing
    }
</table>

<div>
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
