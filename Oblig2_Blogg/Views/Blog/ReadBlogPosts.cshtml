@using Microsoft.AspNetCore.Identity
@using Oblig2_Blogg.Authorization
@using Microsoft.AspNetCore.Authorization
@using Oblig2_Blogg.Models.Entities
@model Oblig2_Blogg.Models.ViewModels.BlogViewModel

@inject SignInManager<ApplicationUser> signInManager
@inject UserManager<ApplicationUser> userManager
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "ReadBlogPosts";
}
<hr />
<p>Blog:</p>
<h1>@Model.Name</h1>


<hr/>
<p>Om: </p>
<h4> @Model.Description</h4>

<p>
    Created: @Model.Created,
    @if (@Model.Owner == null)
    {
        <a> User not registered</a>
    }
    else
    {
        <a> Created by: @Model.Owner.FirstName</a>
    }
</p>

<hr />
@if (@Model.Owner != null)
{
    @if (@Model.Closed == false && @userManager.GetUserName(User) == @Model.Owner.ToString())
    {
        <p>@Html.ActionLink("Create new post", "CreatePost", "Post", new { blogId = @Model.BlogId })</p>
    }
}
@if (TempData["Feedback"] != null)
{
    <div class="success-centered text-info">
        <h5>@TempData["Feedback"]</h5>
    </div>
}

@if (Model.Tags != null)
{
    <table class="table table-hover">
        <tr>
            <th>Tags</th>
            <th> @Html.ActionLink("Fjern søk/filtrering", "ReadBlogPosts", "Blog", new { id = Model.BlogId })</th>
        </tr>
        @try
        {
            <tr>
                @foreach (var item in Model.Tags)
                {
                    <td>
                        @Html.ActionLink(item.TagLabel, "ReadBlogPosts", "Blog", new { tagId = item.TagId, id = Model.BlogId })
                    </td>
                }
            </tr>
        }
        catch (NullReferenceException e)
        {
            Console.Write(e);
        }
    </table>
    <hr />
}

<table class="table table-hover">
    <tr>
        <th>User</th>
        <th>Post </th>
        <th>Created</th>
        <th>Modified </th>
        <th>Options</th>
    </tr>
    @try
    {
        @foreach (var item in Model.Posts)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Owner.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Modified)
                </td>
                <td>

                    @Html.ActionLink("Read post", "ReadPostComments", "Blog", new { PostId = item.PostId })

                    @if (signInManager.IsSignedIn(User))
                    {
                        @if ((await AuthorizationService.AuthorizeAsync(
                  User, item,
                  BlogOperations.Update)).Succeeded)
                        {
                            @Html.ActionLink("| Edit ", "EditPost", "Post", new { PostId = item.PostId })
                        }

                        @if ((await AuthorizationService.AuthorizeAsync(
                  User, item,
                  BlogOperations.Delete)).Succeeded)
                        {
                            @Html.ActionLink(" | Delete", "DeletePost", "Post", new { PostId = item.PostId })
                        }
                    }

                </td>
            </tr>
        }
    }
    catch (NullReferenceException e)
    {
        Console.Write(e);
    }
</table>
<hr />
<div>
    <a asp-action="Index" , asp-controller="Blog">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
